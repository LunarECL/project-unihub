version: '3.8'

networks:
  app:
    driver: bridge

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./conf:/etc/nginx/conf.d
    environment:
      - DEFAULT_HOST=unihub.one

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - 'nginx-proxy'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=unihubone@gmail.com

  api:
    container_name: api
    image: ghcr.io/uoft-utsc-cs-sandbox/unihub/api:latest
    ports:
      - 3333:3333
      - 3030:3030
    environment:
      - VIRTUAL_HOST=api.unihub.one
      - LETSENCRYPT_HOST=api.unihub.one
    networks:
      - app
    restart: always
    env_file:
      - .env

  webapp:
    container_name: webapp
    image: ghcr.io/uoft-utsc-cs-sandbox/unihub/webapp:latest
    ports:
      - 4200:4200
    environment:
      - VIRTUAL_HOST=unihub.one
      - LETSENCRYPT_HOST=unihub.one
    networks:
      - app
    restart: always
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - redisdata:/var/lib/redis
    ports:
      - 6379:6379
    networks:
      - app
    restart: always

  ion-sfu:
    container_name: ion-sfu
    image: pionwebrtc/ion-sfu:latest-jsonrpc
    ports:
      - 8000:7000
      - 5000-5200:5000-5200/udp
    networks:
      - app
    restart: always
    environment:
      - VIRTUAL_HOST=ion.unihub.one
      - LETSENCRYPT_HOST=ion.unihub.one

volumes:
  redisdata:
