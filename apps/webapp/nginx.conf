# nginx-proxy version : 1.2.3-9-g0d9cd2b
# Networks available to the container running docker-gen (which are assumed to
# match the networks available to the container running nginx):
#     unihub_app
# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    '' $scheme;
}
map $http_x_forwarded_host $proxy_x_forwarded_host {
    default $http_x_forwarded_host;
    '' $http_host;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
    default $http_x_forwarded_port;
    '' $server_port;
}
# If the request from the downstream client has an "Upgrade:" header (set to any
# non-empty value), pass "Connection: upgrade" to the upstream (backend) server.
# Otherwise, the value for the "Connection" header depends on whether the user
# has enabled keepalive to the upstream server.
map $http_upgrade $proxy_connection {
    default upgrade;
    '' $proxy_connection_noupgrade;
}
map $upstream_keepalive $proxy_connection_noupgrade {
    # Preserve nginx's default behavior (send "Connection: close").
    default close;
    # Use an empty string to cancel nginx's default behavior.
    true '';
}
# Abuse the map directive (see <https://stackoverflow.com/q/14433309>) to ensure
# that $upstream_keepalive is always defined.  This is necessary because:
#   - The $proxy_connection variable is indirectly derived from
#     $upstream_keepalive, so $upstream_keepalive must be defined whenever
#     $proxy_connection is resolved.
#   - The $proxy_connection variable is used in a proxy_set_header directive in
#     the http block, so it is always fully resolved for every request -- even
#     those where proxy_pass is not used (e.g., unknown virtual host).
map "" $upstream_keepalive {
    # The value here should not matter because it should always be overridden in
    # a location block (see the "location" template) for all requests where the
    # value actually matters.
    default false;
}
# Apply fix for very long server names
server_names_hash_bucket_size 128;
# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
# Set appropriate X-Forwarded-Ssl header based on $proxy_x_forwarded_proto
map $proxy_x_forwarded_proto $proxy_x_forwarded_ssl {
    default off;
    https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$upstream_addr"';
access_log off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
error_log /dev/stderr;
# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Host $proxy_x_forwarded_host;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
proxy_set_header X-Original-URI $request_uri;
# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";
# adballoon.me/
upstream adballoon.me {
    # Container: webapp
    #     networks:
    #         unihub_app (reachable)
    #     IP address: 172.26.0.2
    #     exposed ports: 80/tcp
    #     default port: 80
    #     using port: 80
    server 172.26.0.2:80;
}
server {
    server_name adballoon.me;
    listen 80 default_server;
    access_log /var/log/nginx/access.log vhost;
    # Do not HTTPS redirect Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        auth_basic off;
        auth_request off;
        allow all;
        root /usr/share/nginx/html;
        try_files $uri =404;
        break;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    server_name adballoon.me;
    access_log /var/log/nginx/access.log vhost;
    listen 443 ssl http2 default_server;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/adballoon.me.crt;
    ssl_certificate_key /etc/nginx/certs/adballoon.me.key;
    ssl_dhparam /etc/nginx/certs/adballoon.me.dhparam.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/adballoon.me.chain.pem;
    set $sts_header "";
    if ($https) {
        set $sts_header "max-age=31536000";
    }
    add_header Strict-Transport-Security $sts_header always;
    include /etc/nginx/vhost.d/default;
    location / {
        proxy_pass http://adballoon.me;
        set $upstream_keepalive false;
    }
}
# api.adballoon.me/
upstream api.adballoon.me {
    # Container: api
    #     networks:
    #         unihub_app (reachable)
    #     IP address: 172.26.0.5
    #     exposed ports: 3000/tcp 3030/tcp
    #     default port: 80
    #     using port: 80
    server 172.26.0.5:80;
}
server {
    server_name api.adballoon.me;
    listen 80 ;
    access_log /var/log/nginx/access.log vhost;
    # Do not HTTPS redirect Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        auth_basic off;
        auth_request off;
        allow all;
        root /usr/share/nginx/html;
        try_files $uri =404;
        break;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    server_name api.adballoon.me;
    access_log /var/log/nginx/access.log vhost;
    listen 443 ssl http2 ;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/api.adballoon.me.crt;
    ssl_certificate_key /etc/nginx/certs/api.adballoon.me.key;
    ssl_dhparam /etc/nginx/certs/api.adballoon.me.dhparam.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/api.adballoon.me.chain.pem;
    set $sts_header "";
    if ($https) {
        set $sts_header "max-age=31536000";
    }
    add_header Strict-Transport-Security $sts_header always;
    include /etc/nginx/vhost.d/default;
    location / {
        proxy_pass http://api.adballoon.me;
        set $upstream_keepalive false;
    }
}
# ion.adballoon.me/
upstream ion.adballoon.me {
    # Container: ion-sfu
    #     networks:
    #         unihub_app (reachable)
    #     IP address: 172.26.0.3
    #     exposed ports: 5000/udp 5001/udp 5002/udp 5003/udp 5004/udp 5005/udp 5006/udp 5007/udp 5008/udp 5009/udp 5010/udp 5011/udp 5012/udp 5013/udp 5014/udp 5015/udp 5016/udp 5017/udp 5018/udp 5019/udp 5020/udp 5021/udp 5022/udp 5023/udp 5024/udp 5025/udp 5026/udp 5027/udp 5028/udp 5029/udp 5030/udp 5031/udp 5032/udp 5033/udp 5034/udp 5035/udp 5036/udp 5037/udp 5038/udp 5039/udp 5040/udp 5041/udp 5042/udp 5043/udp 5044/udp 5045/udp 5046/udp 5047/udp 5048/udp 5049/udp 5050/udp 5051/udp 5052/udp 5053/udp 5054/udp 5055/udp 5056/udp 5057/udp 5058/udp 5059/udp 5060/udp 5061/udp 5062/udp 5063/udp 5064/udp 5065/udp 5066/udp 5067/udp 5068/udp 5069/udp 5070/udp 5071/udp 5072/udp 5073/udp 5074/udp 5075/udp 5076/udp 5077/udp 5078/udp 5079/udp 5080/udp 5081/udp 5082/udp 5083/udp 5084/udp 5085/udp 5086/udp 5087/udp 5088/udp 5089/udp 5090/udp 5091/udp 5092/udp 5093/udp 5094/udp 5095/udp 5096/udp 5097/udp 5098/udp 5099/udp 5100/udp 5101/udp 5102/udp 5103/udp 5104/udp 5105/udp 5106/udp 5107/udp 5108/udp 5109/udp 5110/udp 5111/udp 5112/udp 5113/udp 5114/udp 5115/udp 5116/udp 5117/udp 5118/udp 5119/udp 5120/udp 5121/udp 5122/udp 5123/udp 5124/udp 5125/udp 5126/udp 5127/udp 5128/udp 5129/udp 5130/udp 5131/udp 5132/udp 5133/udp 5134/udp 5135/udp 5136/udp 5137/udp 5138/udp 5139/udp 5140/udp 5141/udp 5142/udp 5143/udp 5144/udp 5145/udp 5146/udp 5147/udp 5148/udp 5149/udp 5150/udp 5151/udp 5152/udp 5153/udp 5154/udp 5155/udp 5156/udp 5157/udp 5158/udp 5159/udp 5160/udp 5161/udp 5162/udp 5163/udp 5164/udp 5165/udp 5166/udp 5167/udp 5168/udp 5169/udp 5170/udp 5171/udp 5172/udp 5173/udp 5174/udp 5175/udp 5176/udp 5177/udp 5178/udp 5179/udp 5180/udp 5181/udp 5182/udp 5183/udp 5184/udp 5185/udp 5186/udp 5187/udp 5188/udp 5189/udp 5190/udp 5191/udp 5192/udp 5193/udp 5194/udp 5195/udp 5196/udp 5197/udp 5198/udp 5199/udp 5200/udp 7000/tcp
    #     default port: 80
    #     using port: 80
    server 172.26.0.3:80;
}
server {
    server_name ion.adballoon.me;
    listen 80 ;
    access_log /var/log/nginx/access.log vhost;
    # Do not HTTPS redirect Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        auth_basic off;
        auth_request off;
        allow all;
        root /usr/share/nginx/html;
        try_files $uri =404;
        break;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    server_name ion.adballoon.me;
    access_log /var/log/nginx/access.log vhost;
    listen 443 ssl http2 ;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/ion.adballoon.me.crt;
    ssl_certificate_key /etc/nginx/certs/ion.adballoon.me.key;
    ssl_dhparam /etc/nginx/certs/ion.adballoon.me.dhparam.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/ion.adballoon.me.chain.pem;
    set $sts_header "";
    if ($https) {
        set $sts_header "max-age=31536000";
    }
    add_header Strict-Transport-Security $sts_header always;
    include /etc/nginx/vhost.d/default;
    location / {
        proxy_pass http://ion.adballoon.me;
        set $upstream_keepalive false;
    }
}
