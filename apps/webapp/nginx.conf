user root;
worker_processes auto;
error_log /var/log/nginx/error.log error;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {

  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
  '"$request" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 2048;
  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  server {
    listen 80;
    server_name adballoon.me;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name adballoon.me;

    ssl_certificate /etc/letsencrypt/live/adballoon.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/adballoon.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    # enable gzip compression on static files
    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_types   in application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_vary on;

    # server specific logs
    access_log /var/log/nginx/app.access.log;
    error_log /var/log/nginx/app.error.log;

    # root directory (same as WORKDIR)
    root /usr/share/nginx/html;

    # static files
    location / {
      # single page application, so only index.html
      # React-router will handle clientside routes
      try_files $uri /index.html;
    }

    location /api {
      # `server` refers to container name
      # since its outside of the nginx container
      proxy_pass http://api:3333/api;

      # proxy header configs
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_ssl_session_reuse off;
      proxy_set_header Host $http_host;
      proxy_redirect off;
    }

    location /sharedDocument/ {
      proxy_pass http://api:3030;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
    }

    location /ws {
      proxy_pass http://ion-sfu:7000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
    }
  }
}
